"""Utility functions and classes for the project."""

from .conv_to_matrix import get_conv2d_matrix, get_toeplitz_matrices
# from .enums import Datasets, Devices, Losses, Optims, LR_Schedulers
from .functions import (
    seed_worker,
    check_basic_block_structure,
    check_bottleneck_structure,
    get_vector_of_params,
    get_grad_vector_of_params,
    build_run_name,
    get_tb_layouts,
    get_results,
    get_scalar,
    read_state_dict,
    get_last_checkpointed_epoch,
    get_log_config,
)
from .lr_schedulers import (
    const,
    step25,
    step10,
    warmup20000Step25,
    cont100,
    cont100_limit_lr,
    warmup20000Cont2500,
    step_scheduler,
    linear_and_step_scheduler,
    linear_and_step_scheduler_cont,
)
from .math import (
    compute_matrix_2norm_power_method,
    compute_matrix_2norm_power_method_batched,
    compute_matrix_1norm,
    compute_matrix_1norm_batched,
)

__all__ = [
    "get_conv2d_matrix",
    "get_toeplitz_matrices",
    "Datasets",
    "Devices",
    "Losses",
    "Optims",
    "LR_Schedulers",
    "seed_worker",
    "check_basic_block_structure",
    "check_bottleneck_structure",
    "get_vector_of_params",
    "get_grad_vector_of_params",
    "build_run_name",
    "get_tb_layouts",
    "get_results",
    "get_scalar",
    "read_state_dict",
    "get_last_checkpointed_epoch",
    "get_log_config",
    "const",
    "step25",
    "step10",
    "warmup20000Step25",
    "cont100",
    "cont100_limit_lr",
    "warmup20000Cont2500",
    "step_scheduler",
    "linear_and_step_scheduler",
    "linear_and_step_scheduler_cont",
    "compute_matrix_2norm_power_method",
    "compute_matrix_2norm_power_method_batched",
    "compute_matrix_1norm",
    "compute_matrix_1norm_batched",
]